/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as authSignInImport } from './routes/(auth)/sign-in'
import { Route as authOtpImport } from './routes/(auth)/otp'
import { Route as authOauth2callbackImport } from './routes/(auth)/oauth2callback'
import { Route as auth500Import } from './routes/(auth)/500'

// Create Virtual Routes

const errors503LazyImport = createFileRoute('/(errors)/503')()
const errors500LazyImport = createFileRoute('/(errors)/500')()
const errors404LazyImport = createFileRoute('/(errors)/404')()
const errors403LazyImport = createFileRoute('/(errors)/403')()
const errors401LazyImport = createFileRoute('/(errors)/401')()
const authSignUpLazyImport = createFileRoute('/(auth)/sign-up')()
const authForgotPasswordLazyImport = createFileRoute(
  '/(auth)/forgot-password',
)()
const AuthenticatedSeoIndexLazyImport = createFileRoute(
  '/_authenticated/seo/',
)()
const AuthenticatedSeoKeywordAnalysisLazyImport = createFileRoute(
  '/_authenticated/seo/keyword-analysis',
)()
const AuthenticatedSeoBacklinkAnalysisLazyImport = createFileRoute(
  '/_authenticated/seo/backlink-analysis',
)()
const AuthenticatedSocialMediaYoutubeIndexLazyImport = createFileRoute(
  '/_authenticated/social-media/youtube/',
)()
const AuthenticatedSocialMediaLinkedinIndexLazyImport = createFileRoute(
  '/_authenticated/social-media/linkedin/',
)()
const AuthenticatedSocialMediaInstagramIndexLazyImport = createFileRoute(
  '/_authenticated/social-media/instagram/',
)()
const AuthenticatedSocialMediaFacebookIndexLazyImport = createFileRoute(
  '/_authenticated/social-media/facebook/',
)()
const AuthenticatedSeoTechnicalAnalysisIndexLazyImport = createFileRoute(
  '/_authenticated/seo/technical-analysis/',
)()
const AuthenticatedSeoOnPageIndexLazyImport = createFileRoute(
  '/_authenticated/seo/on-page/',
)()
const AuthenticatedSeoTechnicalAnalysisWebsiteSpeedLazyImport = createFileRoute(
  '/_authenticated/seo/technical-analysis/website-speed',
)()
const AuthenticatedSeoTechnicalAnalysisCrawledPagesLazyImport = createFileRoute(
  '/_authenticated/seo/technical-analysis/crawled-pages',
)()

// Create/Update Routes

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const errors503LazyRoute = errors503LazyImport
  .update({
    id: '/(errors)/503',
    path: '/503',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/503.lazy').then((d) => d.Route))

const errors500LazyRoute = errors500LazyImport
  .update({
    id: '/(errors)/500',
    path: '/500',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/500.lazy').then((d) => d.Route))

const errors404LazyRoute = errors404LazyImport
  .update({
    id: '/(errors)/404',
    path: '/404',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/404.lazy').then((d) => d.Route))

const errors403LazyRoute = errors403LazyImport
  .update({
    id: '/(errors)/403',
    path: '/403',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/403.lazy').then((d) => d.Route))

const errors401LazyRoute = errors401LazyImport
  .update({
    id: '/(errors)/401',
    path: '/401',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/401.lazy').then((d) => d.Route))

const authSignUpLazyRoute = authSignUpLazyImport
  .update({
    id: '/(auth)/sign-up',
    path: '/sign-up',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/sign-up.lazy').then((d) => d.Route))

const authForgotPasswordLazyRoute = authForgotPasswordLazyImport
  .update({
    id: '/(auth)/forgot-password',
    path: '/forgot-password',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() =>
    import('./routes/(auth)/forgot-password.lazy').then((d) => d.Route),
  )

const authSignInRoute = authSignInImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const authOtpRoute = authOtpImport.update({
  id: '/(auth)/otp',
  path: '/otp',
  getParentRoute: () => rootRoute,
} as any)

const authOauth2callbackRoute = authOauth2callbackImport.update({
  id: '/(auth)/oauth2callback',
  path: '/oauth2callback',
  getParentRoute: () => rootRoute,
} as any)

const auth500Route = auth500Import.update({
  id: '/(auth)/500',
  path: '/500',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedSeoIndexLazyRoute = AuthenticatedSeoIndexLazyImport.update({
  id: '/seo/',
  path: '/seo/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/seo/index.lazy').then((d) => d.Route),
)

const AuthenticatedSeoKeywordAnalysisLazyRoute =
  AuthenticatedSeoKeywordAnalysisLazyImport.update({
    id: '/seo/keyword-analysis',
    path: '/seo/keyword-analysis',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/seo/keyword-analysis.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSeoBacklinkAnalysisLazyRoute =
  AuthenticatedSeoBacklinkAnalysisLazyImport.update({
    id: '/seo/backlink-analysis',
    path: '/seo/backlink-analysis',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/seo/backlink-analysis.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSocialMediaYoutubeIndexLazyRoute =
  AuthenticatedSocialMediaYoutubeIndexLazyImport.update({
    id: '/social-media/youtube/',
    path: '/social-media/youtube/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/social-media/youtube/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSocialMediaLinkedinIndexLazyRoute =
  AuthenticatedSocialMediaLinkedinIndexLazyImport.update({
    id: '/social-media/linkedin/',
    path: '/social-media/linkedin/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/social-media/linkedin/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSocialMediaInstagramIndexLazyRoute =
  AuthenticatedSocialMediaInstagramIndexLazyImport.update({
    id: '/social-media/instagram/',
    path: '/social-media/instagram/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/social-media/instagram/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSocialMediaFacebookIndexLazyRoute =
  AuthenticatedSocialMediaFacebookIndexLazyImport.update({
    id: '/social-media/facebook/',
    path: '/social-media/facebook/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/social-media/facebook/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSeoTechnicalAnalysisIndexLazyRoute =
  AuthenticatedSeoTechnicalAnalysisIndexLazyImport.update({
    id: '/seo/technical-analysis/',
    path: '/seo/technical-analysis/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/seo/technical-analysis/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSeoOnPageIndexLazyRoute =
  AuthenticatedSeoOnPageIndexLazyImport.update({
    id: '/seo/on-page/',
    path: '/seo/on-page/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/seo/on-page/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSeoTechnicalAnalysisWebsiteSpeedLazyRoute =
  AuthenticatedSeoTechnicalAnalysisWebsiteSpeedLazyImport.update({
    id: '/seo/technical-analysis/website-speed',
    path: '/seo/technical-analysis/website-speed',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_authenticated/seo/technical-analysis/website-speed.lazy'
    ).then((d) => d.Route),
  )

const AuthenticatedSeoTechnicalAnalysisCrawledPagesLazyRoute =
  AuthenticatedSeoTechnicalAnalysisCrawledPagesLazyImport.update({
    id: '/seo/technical-analysis/crawled-pages',
    path: '/seo/technical-analysis/crawled-pages',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_authenticated/seo/technical-analysis/crawled-pages.lazy'
    ).then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/500': {
      id: '/(auth)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof auth500Import
      parentRoute: typeof rootRoute
    }
    '/(auth)/oauth2callback': {
      id: '/(auth)/oauth2callback'
      path: '/oauth2callback'
      fullPath: '/oauth2callback'
      preLoaderRoute: typeof authOauth2callbackImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpLazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503LazyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/seo/backlink-analysis': {
      id: '/_authenticated/seo/backlink-analysis'
      path: '/seo/backlink-analysis'
      fullPath: '/seo/backlink-analysis'
      preLoaderRoute: typeof AuthenticatedSeoBacklinkAnalysisLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/seo/keyword-analysis': {
      id: '/_authenticated/seo/keyword-analysis'
      path: '/seo/keyword-analysis'
      fullPath: '/seo/keyword-analysis'
      preLoaderRoute: typeof AuthenticatedSeoKeywordAnalysisLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/seo/': {
      id: '/_authenticated/seo/'
      path: '/seo'
      fullPath: '/seo'
      preLoaderRoute: typeof AuthenticatedSeoIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/seo/technical-analysis/crawled-pages': {
      id: '/_authenticated/seo/technical-analysis/crawled-pages'
      path: '/seo/technical-analysis/crawled-pages'
      fullPath: '/seo/technical-analysis/crawled-pages'
      preLoaderRoute: typeof AuthenticatedSeoTechnicalAnalysisCrawledPagesLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/seo/technical-analysis/website-speed': {
      id: '/_authenticated/seo/technical-analysis/website-speed'
      path: '/seo/technical-analysis/website-speed'
      fullPath: '/seo/technical-analysis/website-speed'
      preLoaderRoute: typeof AuthenticatedSeoTechnicalAnalysisWebsiteSpeedLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/seo/on-page/': {
      id: '/_authenticated/seo/on-page/'
      path: '/seo/on-page'
      fullPath: '/seo/on-page'
      preLoaderRoute: typeof AuthenticatedSeoOnPageIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/seo/technical-analysis/': {
      id: '/_authenticated/seo/technical-analysis/'
      path: '/seo/technical-analysis'
      fullPath: '/seo/technical-analysis'
      preLoaderRoute: typeof AuthenticatedSeoTechnicalAnalysisIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/social-media/facebook/': {
      id: '/_authenticated/social-media/facebook/'
      path: '/social-media/facebook'
      fullPath: '/social-media/facebook'
      preLoaderRoute: typeof AuthenticatedSocialMediaFacebookIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/social-media/instagram/': {
      id: '/_authenticated/social-media/instagram/'
      path: '/social-media/instagram'
      fullPath: '/social-media/instagram'
      preLoaderRoute: typeof AuthenticatedSocialMediaInstagramIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/social-media/linkedin/': {
      id: '/_authenticated/social-media/linkedin/'
      path: '/social-media/linkedin'
      fullPath: '/social-media/linkedin'
      preLoaderRoute: typeof AuthenticatedSocialMediaLinkedinIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/social-media/youtube/': {
      id: '/_authenticated/social-media/youtube/'
      path: '/social-media/youtube'
      fullPath: '/social-media/youtube'
      preLoaderRoute: typeof AuthenticatedSocialMediaYoutubeIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteRouteChildren {
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedSeoBacklinkAnalysisLazyRoute: typeof AuthenticatedSeoBacklinkAnalysisLazyRoute
  AuthenticatedSeoKeywordAnalysisLazyRoute: typeof AuthenticatedSeoKeywordAnalysisLazyRoute
  AuthenticatedSeoIndexLazyRoute: typeof AuthenticatedSeoIndexLazyRoute
  AuthenticatedSeoTechnicalAnalysisCrawledPagesLazyRoute: typeof AuthenticatedSeoTechnicalAnalysisCrawledPagesLazyRoute
  AuthenticatedSeoTechnicalAnalysisWebsiteSpeedLazyRoute: typeof AuthenticatedSeoTechnicalAnalysisWebsiteSpeedLazyRoute
  AuthenticatedSeoOnPageIndexLazyRoute: typeof AuthenticatedSeoOnPageIndexLazyRoute
  AuthenticatedSeoTechnicalAnalysisIndexLazyRoute: typeof AuthenticatedSeoTechnicalAnalysisIndexLazyRoute
  AuthenticatedSocialMediaFacebookIndexLazyRoute: typeof AuthenticatedSocialMediaFacebookIndexLazyRoute
  AuthenticatedSocialMediaInstagramIndexLazyRoute: typeof AuthenticatedSocialMediaInstagramIndexLazyRoute
  AuthenticatedSocialMediaLinkedinIndexLazyRoute: typeof AuthenticatedSocialMediaLinkedinIndexLazyRoute
  AuthenticatedSocialMediaYoutubeIndexLazyRoute: typeof AuthenticatedSocialMediaYoutubeIndexLazyRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedSeoBacklinkAnalysisLazyRoute:
    AuthenticatedSeoBacklinkAnalysisLazyRoute,
  AuthenticatedSeoKeywordAnalysisLazyRoute:
    AuthenticatedSeoKeywordAnalysisLazyRoute,
  AuthenticatedSeoIndexLazyRoute: AuthenticatedSeoIndexLazyRoute,
  AuthenticatedSeoTechnicalAnalysisCrawledPagesLazyRoute:
    AuthenticatedSeoTechnicalAnalysisCrawledPagesLazyRoute,
  AuthenticatedSeoTechnicalAnalysisWebsiteSpeedLazyRoute:
    AuthenticatedSeoTechnicalAnalysisWebsiteSpeedLazyRoute,
  AuthenticatedSeoOnPageIndexLazyRoute: AuthenticatedSeoOnPageIndexLazyRoute,
  AuthenticatedSeoTechnicalAnalysisIndexLazyRoute:
    AuthenticatedSeoTechnicalAnalysisIndexLazyRoute,
  AuthenticatedSocialMediaFacebookIndexLazyRoute:
    AuthenticatedSocialMediaFacebookIndexLazyRoute,
  AuthenticatedSocialMediaInstagramIndexLazyRoute:
    AuthenticatedSocialMediaInstagramIndexLazyRoute,
  AuthenticatedSocialMediaLinkedinIndexLazyRoute:
    AuthenticatedSocialMediaLinkedinIndexLazyRoute,
  AuthenticatedSocialMediaYoutubeIndexLazyRoute:
    AuthenticatedSocialMediaYoutubeIndexLazyRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteRouteWithChildren
  '/500': typeof errors500LazyRoute
  '/oauth2callback': typeof authOauth2callbackRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/sign-up': typeof authSignUpLazyRoute
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/503': typeof errors503LazyRoute
  '/': typeof AuthenticatedIndexRoute
  '/seo/backlink-analysis': typeof AuthenticatedSeoBacklinkAnalysisLazyRoute
  '/seo/keyword-analysis': typeof AuthenticatedSeoKeywordAnalysisLazyRoute
  '/seo': typeof AuthenticatedSeoIndexLazyRoute
  '/seo/technical-analysis/crawled-pages': typeof AuthenticatedSeoTechnicalAnalysisCrawledPagesLazyRoute
  '/seo/technical-analysis/website-speed': typeof AuthenticatedSeoTechnicalAnalysisWebsiteSpeedLazyRoute
  '/seo/on-page': typeof AuthenticatedSeoOnPageIndexLazyRoute
  '/seo/technical-analysis': typeof AuthenticatedSeoTechnicalAnalysisIndexLazyRoute
  '/social-media/facebook': typeof AuthenticatedSocialMediaFacebookIndexLazyRoute
  '/social-media/instagram': typeof AuthenticatedSocialMediaInstagramIndexLazyRoute
  '/social-media/linkedin': typeof AuthenticatedSocialMediaLinkedinIndexLazyRoute
  '/social-media/youtube': typeof AuthenticatedSocialMediaYoutubeIndexLazyRoute
}

export interface FileRoutesByTo {
  '/500': typeof errors500LazyRoute
  '/oauth2callback': typeof authOauth2callbackRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/sign-up': typeof authSignUpLazyRoute
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/503': typeof errors503LazyRoute
  '/': typeof AuthenticatedIndexRoute
  '/seo/backlink-analysis': typeof AuthenticatedSeoBacklinkAnalysisLazyRoute
  '/seo/keyword-analysis': typeof AuthenticatedSeoKeywordAnalysisLazyRoute
  '/seo': typeof AuthenticatedSeoIndexLazyRoute
  '/seo/technical-analysis/crawled-pages': typeof AuthenticatedSeoTechnicalAnalysisCrawledPagesLazyRoute
  '/seo/technical-analysis/website-speed': typeof AuthenticatedSeoTechnicalAnalysisWebsiteSpeedLazyRoute
  '/seo/on-page': typeof AuthenticatedSeoOnPageIndexLazyRoute
  '/seo/technical-analysis': typeof AuthenticatedSeoTechnicalAnalysisIndexLazyRoute
  '/social-media/facebook': typeof AuthenticatedSocialMediaFacebookIndexLazyRoute
  '/social-media/instagram': typeof AuthenticatedSocialMediaInstagramIndexLazyRoute
  '/social-media/linkedin': typeof AuthenticatedSocialMediaLinkedinIndexLazyRoute
  '/social-media/youtube': typeof AuthenticatedSocialMediaYoutubeIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/(auth)/500': typeof auth500Route
  '/(auth)/oauth2callback': typeof authOauth2callbackRoute
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(auth)/forgot-password': typeof authForgotPasswordLazyRoute
  '/(auth)/sign-up': typeof authSignUpLazyRoute
  '/(errors)/401': typeof errors401LazyRoute
  '/(errors)/403': typeof errors403LazyRoute
  '/(errors)/404': typeof errors404LazyRoute
  '/(errors)/500': typeof errors500LazyRoute
  '/(errors)/503': typeof errors503LazyRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/seo/backlink-analysis': typeof AuthenticatedSeoBacklinkAnalysisLazyRoute
  '/_authenticated/seo/keyword-analysis': typeof AuthenticatedSeoKeywordAnalysisLazyRoute
  '/_authenticated/seo/': typeof AuthenticatedSeoIndexLazyRoute
  '/_authenticated/seo/technical-analysis/crawled-pages': typeof AuthenticatedSeoTechnicalAnalysisCrawledPagesLazyRoute
  '/_authenticated/seo/technical-analysis/website-speed': typeof AuthenticatedSeoTechnicalAnalysisWebsiteSpeedLazyRoute
  '/_authenticated/seo/on-page/': typeof AuthenticatedSeoOnPageIndexLazyRoute
  '/_authenticated/seo/technical-analysis/': typeof AuthenticatedSeoTechnicalAnalysisIndexLazyRoute
  '/_authenticated/social-media/facebook/': typeof AuthenticatedSocialMediaFacebookIndexLazyRoute
  '/_authenticated/social-media/instagram/': typeof AuthenticatedSocialMediaInstagramIndexLazyRoute
  '/_authenticated/social-media/linkedin/': typeof AuthenticatedSocialMediaLinkedinIndexLazyRoute
  '/_authenticated/social-media/youtube/': typeof AuthenticatedSocialMediaYoutubeIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/500'
    | '/oauth2callback'
    | '/otp'
    | '/sign-in'
    | '/forgot-password'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/503'
    | '/'
    | '/seo/backlink-analysis'
    | '/seo/keyword-analysis'
    | '/seo'
    | '/seo/technical-analysis/crawled-pages'
    | '/seo/technical-analysis/website-speed'
    | '/seo/on-page'
    | '/seo/technical-analysis'
    | '/social-media/facebook'
    | '/social-media/instagram'
    | '/social-media/linkedin'
    | '/social-media/youtube'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/500'
    | '/oauth2callback'
    | '/otp'
    | '/sign-in'
    | '/forgot-password'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/503'
    | '/'
    | '/seo/backlink-analysis'
    | '/seo/keyword-analysis'
    | '/seo'
    | '/seo/technical-analysis/crawled-pages'
    | '/seo/technical-analysis/website-speed'
    | '/seo/on-page'
    | '/seo/technical-analysis'
    | '/social-media/facebook'
    | '/social-media/instagram'
    | '/social-media/linkedin'
    | '/social-media/youtube'
  id:
    | '__root__'
    | '/_authenticated'
    | '/(auth)/500'
    | '/(auth)/oauth2callback'
    | '/(auth)/otp'
    | '/(auth)/sign-in'
    | '/(auth)/forgot-password'
    | '/(auth)/sign-up'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/'
    | '/_authenticated/seo/backlink-analysis'
    | '/_authenticated/seo/keyword-analysis'
    | '/_authenticated/seo/'
    | '/_authenticated/seo/technical-analysis/crawled-pages'
    | '/_authenticated/seo/technical-analysis/website-speed'
    | '/_authenticated/seo/on-page/'
    | '/_authenticated/seo/technical-analysis/'
    | '/_authenticated/social-media/facebook/'
    | '/_authenticated/social-media/instagram/'
    | '/_authenticated/social-media/linkedin/'
    | '/_authenticated/social-media/youtube/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  auth500Route: typeof auth500Route
  authOauth2callbackRoute: typeof authOauth2callbackRoute
  authOtpRoute: typeof authOtpRoute
  authSignInRoute: typeof authSignInRoute
  authForgotPasswordLazyRoute: typeof authForgotPasswordLazyRoute
  authSignUpLazyRoute: typeof authSignUpLazyRoute
  errors401LazyRoute: typeof errors401LazyRoute
  errors403LazyRoute: typeof errors403LazyRoute
  errors404LazyRoute: typeof errors404LazyRoute
  errors500LazyRoute: typeof errors500LazyRoute
  errors503LazyRoute: typeof errors503LazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  auth500Route: auth500Route,
  authOauth2callbackRoute: authOauth2callbackRoute,
  authOtpRoute: authOtpRoute,
  authSignInRoute: authSignInRoute,
  authForgotPasswordLazyRoute: authForgotPasswordLazyRoute,
  authSignUpLazyRoute: authSignUpLazyRoute,
  errors401LazyRoute: errors401LazyRoute,
  errors403LazyRoute: errors403LazyRoute,
  errors404LazyRoute: errors404LazyRoute,
  errors500LazyRoute: errors500LazyRoute,
  errors503LazyRoute: errors503LazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/(auth)/500",
        "/(auth)/oauth2callback",
        "/(auth)/otp",
        "/(auth)/sign-in",
        "/(auth)/forgot-password",
        "/(auth)/sign-up",
        "/(errors)/401",
        "/(errors)/403",
        "/(errors)/404",
        "/(errors)/500",
        "/(errors)/503"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/",
        "/_authenticated/seo/backlink-analysis",
        "/_authenticated/seo/keyword-analysis",
        "/_authenticated/seo/",
        "/_authenticated/seo/technical-analysis/crawled-pages",
        "/_authenticated/seo/technical-analysis/website-speed",
        "/_authenticated/seo/on-page/",
        "/_authenticated/seo/technical-analysis/",
        "/_authenticated/social-media/facebook/",
        "/_authenticated/social-media/instagram/",
        "/_authenticated/social-media/linkedin/",
        "/_authenticated/social-media/youtube/"
      ]
    },
    "/(auth)/500": {
      "filePath": "(auth)/500.tsx"
    },
    "/(auth)/oauth2callback": {
      "filePath": "(auth)/oauth2callback.tsx"
    },
    "/(auth)/otp": {
      "filePath": "(auth)/otp.tsx"
    },
    "/(auth)/sign-in": {
      "filePath": "(auth)/sign-in.tsx"
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.lazy.tsx"
    },
    "/(auth)/sign-up": {
      "filePath": "(auth)/sign-up.lazy.tsx"
    },
    "/(errors)/401": {
      "filePath": "(errors)/401.lazy.tsx"
    },
    "/(errors)/403": {
      "filePath": "(errors)/403.lazy.tsx"
    },
    "/(errors)/404": {
      "filePath": "(errors)/404.lazy.tsx"
    },
    "/(errors)/500": {
      "filePath": "(errors)/500.lazy.tsx"
    },
    "/(errors)/503": {
      "filePath": "(errors)/503.lazy.tsx"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/seo/backlink-analysis": {
      "filePath": "_authenticated/seo/backlink-analysis.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/seo/keyword-analysis": {
      "filePath": "_authenticated/seo/keyword-analysis.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/seo/": {
      "filePath": "_authenticated/seo/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/seo/technical-analysis/crawled-pages": {
      "filePath": "_authenticated/seo/technical-analysis/crawled-pages.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/seo/technical-analysis/website-speed": {
      "filePath": "_authenticated/seo/technical-analysis/website-speed.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/seo/on-page/": {
      "filePath": "_authenticated/seo/on-page/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/seo/technical-analysis/": {
      "filePath": "_authenticated/seo/technical-analysis/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/social-media/facebook/": {
      "filePath": "_authenticated/social-media/facebook/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/social-media/instagram/": {
      "filePath": "_authenticated/social-media/instagram/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/social-media/linkedin/": {
      "filePath": "_authenticated/social-media/linkedin/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/social-media/youtube/": {
      "filePath": "_authenticated/social-media/youtube/index.lazy.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
